// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using plantool.Data;

#nullable disable

namespace plantool.Data.Migrations
{
    [DbContext(typeof(PlantoolDbContext))]
    [Migration("20250325090949_DenormalizeModelsForPerformance")]
    partial class DenormalizeModelsForPerformance
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("plantool.Domain.Entities.ActivityType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationShortText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("plantool.Domain.Entities.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManager")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("plantool.Domain.Entities.ProjectActivity", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan?>("AbsoluteWorkload")
                        .HasColumnType("time");

                    b.Property<string>("ActivityTypeCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly?>("ActualFinishDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ActualStartDate")
                        .HasColumnType("date");

                    b.Property<string>("GeneralRemark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("LatestFinishDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("LatestStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Network")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("OriginalFinishDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("TimeEstimated")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("WorkBreakdownStructure")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("ActivityTypeCode");

                    b.HasIndex("ProjectId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("plantool.Domain.Entities.ProjectActivity", b =>
                {
                    b.HasOne("plantool.Domain.Entities.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeCode");

                    b.HasOne("plantool.Domain.Entities.Project", "Project")
                        .WithMany("Activities")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityType");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("plantool.Domain.Entities.Project", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
